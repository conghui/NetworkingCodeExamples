package com.maxeler.examples.udpforwarding;

import com.maxeler.maxcompiler.v2.build.EngineParameters;
import com.maxeler.maxcompiler.v2.managers.BuildConfig;
import com.maxeler.maxcompiler.v2.managers.BuildConfig.Effort;
import com.maxeler.maxcompiler.v2.managers.BuildConfig.OptimizationTechnique;
import com.maxeler.maxcompiler.v2.managers.custom.ManagerClock;
import com.maxeler.maxcompiler.v2.managers.custom.blocks.KernelBlock;
import com.maxeler.maxcompiler.v2.managers.custom.stdlib.DebugLevel;
import com.maxeler.networking.v1.managers.NetworkManager;
import com.maxeler.networking.v1.managers.netlib.Max4NetworkConnection;
import com.maxeler.networking.v1.managers.netlib.UDPChecksumMode;
import com.maxeler.networking.v1.managers.netlib.UDPConnectionMode;
import com.maxeler.networking.v1.managers.netlib.UDPStream;

 
public class UdpForwardingManager extends NetworkManager {

	public UdpForwardingManager(EngineParameters configuration) {
		super(configuration);

		debug.setDebugLevel(new DebugLevel().setHasStreamStatus(true));
		
		/*
		 * Multicast feed input
		 */
		UDPStream udpMulticastFeed = addUDPStream("UdpMulticastFeed", Max4NetworkConnection.QSFP_TOP_10G_PORT1, 
				UDPConnectionMode.OneToMany, UDPChecksumMode.Disabled);
		
		/*
		 * Output UDP streams
		 */
		UDPStream consumers = addUDPStream("Consumers", Max4NetworkConnection.QSFP_BOT_10G_PORT1, UDPConnectionMode.OneToOne, UDPChecksumMode.Disabled);
		
		ManagerClock netClk = getNetworkClock(Max4NetworkConnection.QSFP_TOP_10G_PORT1);
		pushDefaultClock(netClk);
		
		
		KernelBlock k = addKernel(new UdpForwardingKernel(makeKernelParameters("fwd")));
		
		
		k.getInput(UdpForwardingKernel.INPUT) <== udpMulticastFeed.getReceiveStream();
		consumers.getTransmitStream() <== k.getOutput(UdpForwardingKernel.OUTPUT_CONSUMERS);
		addStreamToCPU("events") <== k.getOutput(UdpForwardingKernel.OUTPUT_EVENTS_TO_CPU);
	}

	public static void main(String[] args) {
		UdpForwardingParameters params = new UdpForwardingParameters(args);
		UdpForwardingManager manager = new UdpForwardingManager(params);

		BuildConfig bc = manager.getBuildConfig();
		bc.setBuildEffort(Effort.VERY_HIGH);
		bc.setOptimizationGoal(OptimizationTechnique.SPEED);
		bc.setMPPRCostTableSearchRange(params.getMPPRStartCT(), params.getMPPREndCT());
		bc.setMPPRParallelism(params.getMPPRThreads());
		bc.setMPPRRetryNearMissesThreshold(params.getMPPRRetryThreshold());

		manager.build();
	}

}
